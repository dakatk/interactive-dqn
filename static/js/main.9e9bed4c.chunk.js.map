{"version":3,"sources":["util/interface/AsyncComponent.js","app/App.jsx","app/controls/Controls.jsx","app/counter/Counter.jsx","util/rl/Dqn.js","util/Sleep.js","util/rl/Trainer.js","app/game/Game.jsx","app/welcome-page/WelcomePage.jsx","app/game/frozen-lake/util/Action.js","util/rl/Transition.js","app/game/interface/GameComponent.js","app/game/frozen-lake/board/cell/Cell.jsx","app/game/frozen-lake/board/Board.jsx","app/game/frozen-lake/FrozenLake.jsx","app/game/tic-tac-toe/util/GameLogic.js","app/game/tic-tac-toe/board/Board.jsx","app/game/tic-tac-toe/TicTacToe.jsx","app/game/snake/Snake.jsx","index.jsx"],"names":["AsyncComponent","newState","Promise","resolve","setState","React","Component","appTitle","flexGrow","textAlign","marginRight","App","props","state","mainMenu","title","target","a","this","setStateAsync","AppBar","position","Toolbar","IconButton","size","edge","color","sx","mr","onClick","e","setMainMenu","currentTarget","Typography","variant","component","menuItems","key","params","push","MenuItem","Link","setTitle","to","route","content","Object","entries","MenuModel","Menu","id","open","Boolean","anchorEl","onClose","disableAutoFocusItem","menuBar","Controls","mode","epsilon","epsilonMax","epsilonMin","maxSteps","updateTarget","episodes","batchSize","running","stepDelay","handleInputChange","bind","handleModeSelectChange","handlePlayButtonPress","handleResetButtonPress","value","type","checked","name","onModeSelect","onPlay","freeze","currentStep","currentEpisode","onReset","controlsElements","ControlsModel","el","label","tooltip","createLabel","createInput","labelText","labelFor","className","htmlFor","onChange","elementProps","createElement","defaultValue","disabled","max","min","step","createControlsForMode","Counter","episode","style","clear","showCurrentStep","showCurrentEpisode","Dqn","bufferSize","gamma","layers","reset","mainModel","tf","layer","add","dense","compile","loss","optimizer","targetModel","updateTargetModel","replayBuffer","game","stateAsTensor","epsilonGreedy","allowedActions","action","transition","storeTransition","i","weights","getWeights","setWeights","unshift","length","pop","actionSpace","Math","random","randIndex","floor","qValues","predict","argMax","dataSync","miniBatch","targetQ","reward","done","targetValue","nextState","expected","arraySync","enumOrdinal","fit","epochs","shuffle","clonedBuffer","Set","randomIndex","mainPred","targetPred","data","maxAction","sleep","ms","setTimeout","parseInt","Trainer","dqn","epsDecay","singleEpisode","exp","forceUpdate","trainModel","Game","controlMode","ref","current","trainer","controlState","singleStep","fullyTrain","WelcomePage","Action","enumKey","DOWN","UP","RIGHT","LEFT","console","error","ordinal","Enumify","_","closeEnum","Transition","GameComponent","Cell","StylesModel","classes","join","titles","populated","Board","cells","boardData","index","location","rowSize","FrozenLake","board","prevAction","opposite","stateX","stateY","fromOrdinal","prevState","includes","cell","oneHot","WIN_CONDITIONS","GameLogic","moves","row","j","player","map","col","every","move","TicTacToe","legalMoves","log","flattened","concat","numericValues","Snake","Index","frozenLakeRef","createRef","ticTacToeRef","snakeRef","homePath","components","frozenLake","ticTacToe","snake","routes","ParamsModel","path","url","element","dqnParams","exact","childRoutes","parentRoutes","routingTree","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.9e9bed4c.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class AsyncComponent extends React.Component {\n    setStateAsync(newState) {\n        return new Promise((resolve) => {\n            this.setState(newState, () => {\n                resolve();\n            });\n        });\n    }\n}","import React from 'react';\nimport AsyncComponent from '../util/interface/AsyncComponent';\nimport { Outlet, Link } from \"react-router-dom\";\nimport { AppBar, Toolbar, Menu, MenuItem, IconButton, Typography } from '@mui/material';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport MenuModel from './Menu.json';\nimport './App.css';\n\nconst appTitle = {\n    flexGrow: 1,\n    textAlign: 'center',\n    marginRight: '2.5em'\n};\n\nexport default class App extends AsyncComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mainMenu: null,\n            title: 'Welcome'\n        }\n    }\n\n    async setMainMenu(target) {\n        await this.setStateAsync({mainMenu: target})\n    }\n\n    async setTitle(title) {\n        await this.setStateAsync({title});\n    }\n\n    menuBar() {\n        return <AppBar position=\"static\">\n            <Toolbar>\n                <IconButton\n                    size=\"large\"\n                    edge=\"start\"\n                    color=\"inherit\"\n                    aria-haspopup=\"true\"\n                    aria-controls=\"main-menu\"\n                    sx={{ mr: 2 }}\n                    onClick={e => this.setMainMenu(e.currentTarget)}\n                >\n                    <MenuIcon />\n                </IconButton>\n                <Typography variant=\"h5\" component=\"div\" sx={appTitle}>\n                    {this.state.title}\n                </Typography>\n            </Toolbar>\n        </AppBar>\n    }\n\n    menuItems() {\n        const menuItems = [];\n        for (const [key, params] of Object.entries(MenuModel)) {\n            menuItems.push(<MenuItem\n                key={key}\n                component={Link}\n                onClick={async () => {\n                    await this.setMainMenu(null);\n                    await this.setTitle(params.title);\n                }}\n                to={params.route}\n            > {params.content}\n            </MenuItem>);\n        }\n        return menuItems;\n    }\n\n    mainMenu() {\n        return <Menu\n            id=\"main-menu\"\n            open={Boolean(this.state.mainMenu)}\n            anchorEl={this.state.mainMenu}\n            onClose={async () => await this.setMainMenu(null)}\n            disableAutoFocusItem\n        > {this.menuItems()}\n        </Menu>\n    }\n\n    render() {\n        return <div>\n            {this.menuBar()}\n            {this.mainMenu()}\n\n            <Outlet />\n        </div>\n    }\n}\n","import React from \"react\";\nimport AsyncComponent from \"../../util/interface/AsyncComponent\";\nimport ControlsModel from './models/Controls.json';\nimport './Controls.css';\n\nexport default class Controls extends AsyncComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mode: 'step',\n            epsilon: 0.5,\n            epsilonMax: 1.0,\n            epsilonMin: 0.0,\n            maxSteps: 20,\n            updateTarget: false,\n            episodes: 1000,\n            batchSize: 32,\n            running: false,\n            stepDelay: 500\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleModeSelectChange = this.handleModeSelectChange.bind(this);\n        this.handlePlayButtonPress = this.handlePlayButtonPress.bind(this);\n        this.handleResetButtonPress = this.handleResetButtonPress.bind(this);\n    }\n\n    async handleInputChange(e) {\n        const target = e.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        await this.setStateAsync({ [name]: value });\n    }\n\n    async handleModeSelectChange(e) {\n        await this.handleInputChange(e);\n        await this.props.onModeSelect(this.state.mode);\n    }\n\n    async handlePlayButtonPress() {\n        await this.setStateAsync({ running: true });\n        await this.props.onPlay(Object.freeze({...this.state}));\n        await this.setStateAsync({ running: false });\n    }\n\n    async handleResetButtonPress() {\n        await this.setStateAsync({ \n            running: false, \n            currentStep: 0, \n            currentEpisode: 0 \n        });\n        await this.props.onReset();\n    }\n\n    createControlsForMode() {\n        const controlsElements = [];\n        for (const el of ControlsModel[this.state.mode]) {\n            const props = el.props;\n            const label = el.label;\n            const name = props.name;\n            const tooltip = props.title;\n\n            controlsElements.push(this.createLabel(label, name, tooltip));\n            controlsElements.push(this.createInput(props));\n        }\n\n        return <div id=\"mode-controls\">\n            {controlsElements}\n        </div>\n    }\n\n    createLabel(labelText, labelFor, tooltip) {\n        return <label \n            className=\"control\" \n            htmlFor={labelFor}\n            title={tooltip}\n            id={`${labelFor}-label`} \n            key={`${labelFor}-label`}>{`${labelText}:`}&nbsp;\n        </label>\n    }\n\n    createInput(props) {\n        const name = props.name;\n        const className = \"control labeled\";\n        const onChange = this.handleInputChange;\n        const value = this.state[name];\n        const key = name + '-input';\n\n        const elementProps = {\n            ...props, \n            className,\n            onChange,\n            value,\n            key\n        };\n        return React.createElement('input', elementProps);\n    }\n\n    render() {\n        return <div id=\"controls-box\">\n            <div id=\"static-controls\">\n                <select className=\"control\" id=\"mode-select\" name=\"mode\" title=\"Mode select\" \n                    onChange={this.handleModeSelectChange} defaultValue=\"step\">\n                    <option value=\"step\">Single Step</option>\n                    <option value=\"episode\">Single Episode</option>\n                    <option value=\"train\">Multiple Episodes</option>\n                </select>\n                <button \n                    className=\"control\" \n                    id=\"play-button\" \n                    title=\"Run\"\n                    disabled={this.state.running}\n                    onClick={this.handlePlayButtonPress}>▶\n                </button>\n                <button \n                    className=\"control\" \n                    id=\"reset-button\" \n                    title=\"Reset\" \n                    disabled={this.state.running}\n                    onClick={this.handleResetButtonPress}>↺\n                </button>\n                <label\n                    className=\"control\"\n                    htmlFor=\"stepDelay\"\n                    id=\"step-delay-label\"\n                    title=\"Delay between steps (ms)\">Delay:&nbsp;\n                </label>\n                <input \n                    className=\"control labeled\"\n                    name=\"stepDelay\"\n                    id=\"stepDelay\"\n                    title=\"Delay between steps (ms)\"\n                    onChange={this.handleInputChange}\n                    value={this.state.stepDelay}\n                    type=\"number\"\n                    max=\"5000\"\n                    min=\"100\"\n                    step=\"100\">\n                </input>\n            </div>\n            {this.createControlsForMode()}\n        </div>\n    }\n}","import React from 'react';\nimport './Counter.css';\n\nexport default class Counter extends React.Component {\n    showCurrentStep() {\n        const mode = this.props.mode;\n        if (mode === 'episode' || mode === 'train') {\n            return <h3 id=\"counter-step\">Step: {this.props.step}</h3>\n        }\n    }\n\n    showCurrentEpisode() {\n        if (this.props.mode === 'train') {\n            return <h3 id=\"counter-episode\">Episode: {this.props.episode}</h3>\n        }\n    }\n\n    render() {\n        return <div style={{clear: 'both'}} id=\"counter-counts\">\n            {this.showCurrentStep()}\n            {this.showCurrentEpisode()}\n        </div>\n    }\n}","/*eslint eqeqeq: \"off\"*/\nimport * as tf from '@tensorflow/tfjs';\n\nexport default class Dqn {\n    constructor(bufferSize, gamma, layers) {\n        this.bufferSize = bufferSize;\n        this.gamma = gamma;\n        this.layers = layers;\n        this.reset();\n    }\n\n    reset() {\n        this.mainModel = tf.sequential();\n        for (const layer of this.layers) {\n            this.mainModel.add(tf.layers.dense(layer));\n        }\n        this.mainModel.compile({loss: 'meanSquaredError', optimizer: 'adam'});\n\n        this.targetModel = tf.sequential();\n        for (const layer of this.layers) {\n            this.targetModel.add(tf.layers.dense(layer));\n        }\n        this.updateTargetModel();\n        this.replayBuffer = [];\n    }\n\n    async step(game, epsilon) {\n        const state = game.stateAsTensor();\n        const action = await this.epsilonGreedy(state, game.allowedActions(), epsilon);\n        const transition = await game.step(action);\n\n        this.storeTransition(transition);\n        return transition;\n    }\n\n    updateTargetModel() {\n        for (const i in this.mainModel.layers) {\n            const weights = this.mainModel.layers[i].getWeights();\n            this.targetModel.layers[i].setWeights(weights);\n        }\n    }\n\n    storeTransition(transition) {\n        this.replayBuffer.unshift(transition);\n\n        if (this.replayBuffer.length === this.bufferSize + 1) {\n            this.replayBuffer.pop();\n        }\n    }\n\n    async epsilonGreedy(state, actionSpace, epsilon) {\n        if (Math.random() < epsilon) {\n            const randIndex = Math.floor(Math.random() * actionSpace.length);\n            return actionSpace[randIndex];\n        }\n        const qValues = this.mainModel.predict(state);\n        const argMax = await qValues.argMax(-1).dataSync();\n\n        return argMax[0];\n    }\n\n    async trainModel(batchSize) {\n        if (this.replayBuffer.length < batchSize) {\n            return;\n        }\n\n        for (const transition of this.miniBatch(batchSize)) {\n            let targetQ = transition.reward;\n            if (!transition.done) {\n                targetQ += this.gamma * this.targetValue(transition.nextState);\n            }\n\n            let expected = this.mainModel.predict(transition.state).arraySync();\n            expected[0][transition.action.enumOrdinal] = targetQ;\n\n            await this.mainModel.fit(transition.state, tf.tensor2d(expected), { epochs: 1, batchSize: 1, shuffle: false });\n        }\n    }\n\n    miniBatch(batchSize) {\n        if (batchSize >= this.replayBuffer.length) {\n            let clonedBuffer = [...this.replayBuffer];\n            tf.util.shuffle(clonedBuffer);\n            return clonedBuffer;\n        }\n\n        const bufferSize = this.replayBuffer.length;\n        const miniBatch = new Set();\n\n        while (miniBatch.size != batchSize) {\n            const randomIndex = Math.floor(Math.random() * bufferSize);\n            miniBatch.add(this.replayBuffer[randomIndex]);\n        }\n        return miniBatch;\n    }\n\n    async targetValue(nextState) {\n        const mainPred = this.mainModel.predict(nextState);\n        const targetPred = this.targetModel.predict(nextState);\n        const maxAction = await mainPred.argMax(-1).data();\n\n        return targetPred.arraySync()[0][maxAction[0]];\n    }\n}","export default function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, parseInt(ms)));\n  }","import Dqn from './Dqn';\nimport sleep from '../Sleep'\n\nexport default class Trainer {\n    constructor(bufferSize, gamma, layers) {\n        this.dqn = new Dqn(bufferSize, gamma, layers);\n    }\n\n    async fullyTrain(component, episodes, maxSteps, batchSize, epsilonMax, epsilonMin, stepDelay) {\n        const epsDecay = (epsilonMax - epsilonMin) / episodes;\n        let epsilon = epsilonMax;\n\n        for (let episode = 0; episode < episodes; episode ++) {\n            await component.setStateAsync({ currentEpisode: episode + 1 });\n            await this.singleEpisode(component, maxSteps, epsilon, batchSize, stepDelay);\n\n            if (epsilon > epsilonMin) {\n                epsilon = (epsilonMax - epsilonMin) * Math.exp(-epsDecay * episode) + epsilonMin;\n            }\n        }\n        this.dqn.updateTargetModel();\n    }\n\n    async singleEpisode(component, maxSteps, epsilon, batchSize, stepDelay) {\n        for (let step = 0; step < maxSteps; step ++) {\n            const transition = await this.dqn.step(component.game, epsilon);\n\n            await component.setStateAsync({ currentStep: step + 1 });\n            await sleep(stepDelay);\n            component.forceUpdate();\n\n            if (transition.done) {\n                break;\n            }\n        }\n        await component.game.reset();\n        await this.dqn.trainModel(batchSize);\n        this.dqn.updateTargetModel();\n    }\n\n    async singleStep(component, epsilon, updateTarget, batchSize) {\n        const step = await this.dqn.step(component.game, epsilon);\n\n        if (step.done) {\n            await component.game.reset();\n            await this.dqn.trainModel(batchSize);\n        }\n        if (updateTarget) {\n            this.dqn.updateTargetModel();\n        }\n    }\n\n    reset() {\n        this.dqn.reset();\n    }\n}","import AsyncComponent from '../../util/interface/AsyncComponent';\nimport Controls from '../controls/Controls';\nimport Counter from '../counter/Counter';\nimport Trainer from '../../util/rl/Trainer';\nimport './Game.css';\n\nexport default class Game extends AsyncComponent {\n    constructor(props) {\n        super(props);\n\n        this.state = { \n            currentStep: 0, \n            currentEpisode: 0, \n            controlMode: 'step' \n        };\n        this.onPlay = this.onPlay.bind(this);\n        this.onReset = this.onReset.bind(this);\n        this.onModeSelect = this.onModeSelect.bind(this);\n    }\n\n    componentDidMount() {\n        const params = this.props.params;\n        this.game = this.props.component.ref.current;\n        this.trainer = new Trainer(params.bufferSize, params.gamma, params.layers);\n    }\n\n    async onPlay(controlState) {\n        switch (controlState.mode) {\n            case 'step':\n                await this.trainer.singleStep(this,\n                    controlState.epsilon, \n                    controlState.updateTarget, \n                    controlState.batchSize\n                );\n                break;\n\n            case 'episode':\n                await this.trainer.singleEpisode(this,\n                    controlState.maxSteps, \n                    controlState.epsilon, \n                    controlState.batchSize,\n                    controlState.stepDelay\n                );\n                break;\n\n            case 'train':\n                await this.trainer.fullyTrain(this,\n                    controlState.episodes, \n                    controlState.maxSteps, \n                    controlState.batchSize, \n                    controlState.epsilonMax, \n                    controlState.epsilonMin,\n                    controlState.stepDelay\n                );\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    async onReset() {\n        await this.setStateAsync({ \n            currentStep: 0, \n            currentEpisode: 0 \n        });\n        await this.game.reset();\n        this.trainer.reset();\n    }\n\n    async onModeSelect(mode) {\n        await this.setStateAsync({ \n            currentStep: 0, \n            currentEpisode: 0,\n            controlMode: mode\n        });\n        await this.game.reset();\n    }\n\n    render() {\n        return <div>\n            <div id=\"game-controls-container\">\n                <Controls \n                    onPlay={this.onPlay} \n                    onReset={this.onReset} \n                    onModeSelect={this.onModeSelect}\n                />\n            </div>\n            <div id=\"game-container\">\n                {this.props.component}\n            </div>\n            <div id=\"game-counter-container\">\n                <Counter \n                    mode={this.state.controlMode} \n                    step={this.state.currentStep} \n                    episode={this.state.currentEpisode} \n                />\n            </div>\n        </div>\n    }\n}","import React from \"react\";\nimport './WelcomePage.css';\n\nexport default class WelcomePage extends React.Component {\n    render() {\n        return <div id=\"welcome\">\n            <h1>Welcome!</h1>\n        </div>\n    }\n}","import { Enumify } from \"enumify\";\n\nexport default class Action extends Enumify {\n    static UP = new Action();\n    static DOWN = new Action();\n    static LEFT = new Action();\n    static RIGHT = new Action();\n    static _ = this.closeEnum();\n\n    opposite() {\n        switch (this.enumKey) {\n            case 'UP': \n                return Action.DOWN;\n            case 'DOWN':\n                return Action.UP;\n            case 'LEFT':\n                return Action.RIGHT;\n            case 'RIGHT':\n                return Action.LEFT;\n            default:\n                console.error(`Action '${this.enumKey}' doesn't have an opposite`);\n                break;\n        }\n    }\n\n    static fromOrdinal(ordinal) {\n        switch (ordinal) {\n            case Action.UP.enumOrdinal:\n                return Action.UP;\n            case Action.DOWN.enumOrdinal:\n                return Action.DOWN;\n            case Action.LEFT.enumOrdinal:\n                return Action.LEFT;\n            case Action.RIGHT.enumOrdinal:\n                return Action.RIGHT;\n            default:\n                console.error(`Not an Action: ${ordinal}`);\n                break;\n        }\n    }\n}\n","export default class Transition {\n    constructor(action, state, reward, done, nextState, allowedActions) {\n        this.action = action;\n        this.state = state;\n        this.reward = reward;\n        this.done = done;\n        this.nextState = nextState;\n        this.allowedActions = allowedActions;\n    }\n}","import AsyncComponent from \"../../../util/interface/AsyncComponent\";\n\nexport default class GameComponent extends AsyncComponent {\n    async reset() {}\n    allowedActions() {}\n    async step(action) {}\n    stateAsTensor() {}\n}","import React from 'react';\nimport StylesModel from './models/Styles.json';\nimport './Cell.css';\n\nexport default class Cell extends React.Component {\n    render() {\n        const type = this.props.type;\n        const className = [StylesModel.classes[type] || '', 'cell-grid-item'].join(' ');\n        const tooltip = StylesModel.titles[type];\n        const content = (this.props.populated && '웃') || type;\n\n        return <div className={className} title={tooltip}>{content}</div>\n    }\n}","import React from 'react';\nimport Cell from './cell/Cell';\nimport './Board.css';\n\nexport default class Board extends React.Component {\n    render() {\n        const cells = [];\n        for (const i in this.props.boardData) {\n            const type = this.props.boardData[i];\n            const index = parseInt(i);\n            const populated = index  === this.props.location;\n            \n            cells.push(<Cell type={type} populated={populated} key={i} />);\n            if ((index + 1) % this.props.rowSize === 0) {\n                cells.push(<br key={`${i}-br`} />)\n            }\n        }\n        return <div id=\"board-grid\">\n            {cells}\n        </div>\n    }\n}","import React from 'react';\nimport * as tf from '@tensorflow/tfjs';\nimport Action from './util/Action';\nimport Transition from '../../../util/rl/Transition';\nimport GameComponent from '../interface/GameComponent';\nimport Board from './board/Board';\nimport './FrozenLake.css';\n\nexport default class FrozenLake extends GameComponent {\n    board = Object.freeze([\n        'S', 'F', 'F', 'F',\n        'F', 'H', 'F', 'H',\n        'F', 'F', 'F', 'H',\n        'H', 'F', 'F', 'G'\n    ]);\n\n    constructor(props) {\n        super(props);\n\n        this.state = { location: 0 };\n        this.prevAction = Action.RIGHT; \n    }\n\n    async reset() {\n        await this.setStateAsync({ location: 0 });\n        this.prevAction = Action.RIGHT\n    }\n\n    allowedActions() {\n        const opposite = this.prevAction.opposite();\n        const location = this.state.location;\n        \n        const stateX = location % 4;\n        const stateY = Math.floor(location / 4);\n\n        const allowedActions = [];\n\n        if (stateX > 0 && opposite !== Action.LEFT) {\n            allowedActions.push(Action.LEFT.enumOrdinal);\n        }\n        if (stateX < 3 && opposite !== Action.RIGHT) {\n            allowedActions.push(Action.RIGHT.enumOrdinal);\n        }\n        if (stateY > 0 && opposite !== Action.UP) {\n            allowedActions.push(Action.UP.enumOrdinal);\n        }\n        if (stateY < 3 && opposite !== Action.DOWN) {\n            allowedActions.push(Action.DOWN.enumOrdinal);\n        }\n        return allowedActions;\n    }\n\n    async step(action) {\n        action = Action.fromOrdinal(action);\n        \n        const prevState = this.stateAsTensor();\n        const allowedActions = this.allowedActions();\n\n        if (!allowedActions.includes(action)) {\n            return new Transition(action, prevState, -1, true, prevState, allowedActions);\n        }\n        const location = this.state.location;\n        let stateX = location % 4;\n        let stateY = Math.floor(location / 4);\n\n        switch (action) {\n            case Action.UP:\n                stateY --;\n                break;\n\n            case Action.DOWN:\n                stateY ++;\n                break;\n\n            case Action.LEFT:\n                stateX --;\n                break;\n\n            case Action.RIGHT:\n                stateX ++;\n                break;\n            \n            default:\n                break;\n        }\n        await this.setStateAsync({ location: stateY * 4 + stateX });\n        this.prevAction = action;\n\n        return new Transition(action, prevState, this.reward(), this.done(), this.stateAsTensor(), allowedActions);\n    }\n\n    reward() {\n        const location = this.state.location;\n        switch (this.board[location]) {\n            case 'G':\n                return 1;\n            case 'H':\n                return -1;\n            case 'F':\n            case 'S':\n            default:\n                return 0;\n        }\n    }\n\n    done() {\n        const location = this.state.location;\n        const cell = this.board[location];\n        return cell === 'G' || cell === 'H';\n    }\n\n    stateAsTensor() {\n        const oneHot = [\n            0, 0, 0, 0,\n            0, 0, 0, 0,\n            0, 0, 0, 0,\n            0, 0, 0, 0\n        ];\n        const location = this.state.location;\n        oneHot[location] = 1;\n        \n        return tf.tensor2d([oneHot]);\n    }\n\n    render() {\n        return <Board boardData={this.board} location={this.state.location} rowSize={4} />\n    }\n}","const WIN_CONDITIONS = [\n    [[0, 0], [0, 1], [0, 2]],\n    [[1, 0], [1, 1], [1, 2]],\n    [[2, 0], [2, 1], [2, 2]],\n\n    [[0, 0], [1, 0], [2, 0]],\n    [[0, 1], [1, 1], [2, 1]],\n    [[0, 2], [1, 2], [2, 2]],\n\n    [[0, 0], [1, 1], [2, 2]],\n    [[0, 2], [1, 1], [2, 0]]\n]\n\nexport default class GameLogic {\n    constructor(board) {\n        this.board = board || [\n            [' ', ' ', ' '],\n            [' ', ' ', ' '],\n            [' ', ' ', ' ']\n        ];\n    }\n\n    reset() {\n        this.board = [\n            [' ', ' ', ' '],\n            [' ', ' ', ' '],\n            [' ', ' ', ' ']\n        ];\n    }\n\n    legalMoves() {\n        const moves = [];\n        for (const [i, row] in Object.entries(this.board)) {\n            for (const [j, cell] in Object.entries(row)) {\n                if (cell === ' ') {\n                    moves.push([i, j]);\n                }\n            }\n        }\n        return moves;\n    }\n\n    isWinner(player) {\n        for (const winCondition of WIN_CONDITIONS) {\n            const winCells = winCondition.map(value => {\n                const row = value[0];\n                const col = value[1];\n                return this.board[row][col] === player;\n            });\n\n            if (winCells.every(value => value)) {\n                return true; \n            }\n        }\n        return false;\n    }\n\n    makeMove(move, player) {\n        const row = move[0];\n        const col = move[1];\n        this.board[row][col] = player;\n    }\n\n    clone() {\n        return new GameLogic([\n            [...this.board[0]],\n            [...this.board[1]],\n            [...this.board[2]]\n        ]);\n    }\n}","import React from 'react';\nimport './Board.css';\n\nexport default class Board extends React.Component {\n    row(index) {\n        const row = this.props.cells[index];\n        return <tr>\n            <td className=\"board-cell\">{row[0]}</td>\n            <td className=\"board-cell\">{row[1]}</td>\n            <td className=\"board-cell\">{row[2]}</td>\n        </tr>\n    }\n\n    render() {\n        return <table>\n            <tbody>\n                {this.row(0)}\n                {this.row(1)}\n                {this.row(2)}\n            </tbody>\n        </table>\n    }\n}","import GameComponent from '../interface/GameComponent';\nimport GameLogic from './util/GameLogic';\nimport Board from './board/Board';\nimport * as tf from '@tensorflow/tfjs';\nimport './TicTacToe.css';\n\nexport default class TicTacToe extends GameComponent {\n    constructor(props) {\n        super(props);\n\n        this.game = new GameLogic();\n        this.state = {\n            cells: this.game.board\n        };\n    }\n\n    async reset() {\n        this.game.reset();\n        await this.setStateAsync({ cells: this.game.board });\n    }\n\n    allowedActions() {\n        return this.game.legalMoves().map(move => move[0] * 3 + move[1]);\n    }\n\n    async step(action) {\n        console.log(action);\n    }\n\n    stateAsTensor() {\n        const flattened = this.game.board[0]\n            .concat(this.game.board[1])\n            .concat(this.game.board[2]);\n\n            const numericValues = {\n                ' ': 0,\n                'X': 1,\n                'O': 2\n            };\n            return tf.tensor2d([\n                flattened.map(value => numericValues[value])\n            ]);\n    }\n\n    render() {\n        return <Board cells={this.state.cells}></Board>\n    }\n}","import GameComponent from '../interface/GameComponent';\nimport './Snake.css';\n\nexport default class Snake extends GameComponent {\n    render() {\n        return <div id=\"snake\">\n            <h1>Snake</h1>\n        </div>\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport App from './app/App';\nimport Game from './app/game/Game';\nimport WelcomePage from './app/welcome-page/WelcomePage';\nimport FrozenLake from './app/game/frozen-lake/FrozenLake';\nimport TicTacToe from './app/game/tic-tac-toe/TicTacToe';\nimport Snake from './app/game/snake/Snake';\nimport ParamsModel from './models/Params.json';\nimport './index.css';\n\nclass Index extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.frozenLakeRef = React.createRef();\n        this.ticTacToeRef = React.createRef();\n        this.snakeRef = React.createRef();\n    }\n\n    childRoutes(homePath) {\n        const components = {\n            frozenLake: <FrozenLake ref={this.frozenLakeRef} />,\n            ticTacToe: <TicTacToe ref={this.ticTacToeRef} />,\n            snake: <Snake ref={this.snakeRef} />\n        };\n\n        const routes = [];\n        for (const [key, params] of Object.entries(ParamsModel)) {\n            routes.push(<Route \n                key={key}\n                path={homePath + params.url} \n                element={<Game\n                    params={params.dqnParams}\n                    component={components[key]}\n                />}\n            />);\n        }\n        return routes;\n    }\n\n    routingTree(homePath, index) {\n        return <Route exact path={homePath} element={<App />} key={index}>\n            <Route path={homePath} element={<WelcomePage />} />\n            {this.childRoutes(homePath)}\n        </Route>\n    }\n\n    render() {\n        return <BrowserRouter>\n            <Routes>\n                {ParamsModel.parentRoutes.map((path, index) => \n                    this.routingTree(path, index)\n                )}\n            </Routes>\n        </BrowserRouter>\n    }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Index />, rootElement);\n"],"sourceRoot":""}