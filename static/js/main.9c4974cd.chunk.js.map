{"version":3,"sources":["util/AsyncComponent.js","app/App.jsx","app/controls/Controls.jsx","app/counter/Counter.jsx","util/Step.js","util/rl/Dqn.js","util/Sleep.js","util/rl/Trainer.js","app/game/Game.jsx","app/welcome-page/WelcomePage.jsx","app/game/frozen-lake/board/cell/Cell.jsx","app/game/frozen-lake/board/Board.jsx","app/game/frozen-lake/FrozenLake.jsx","index.jsx"],"names":["AsyncComponent","newState","Promise","resolve","setState","React","Component","appTitle","flexGrow","textAlign","App","props","state","mainMenu","title","target","a","this","setStateAsync","AppBar","position","Toolbar","IconButton","size","edge","color","sx","mr","onClick","e","setMainMenu","currentTarget","Typography","variant","component","Menu","id","open","Boolean","anchorEl","onClose","disableAutoFocusItem","MenuItem","Link","setTitle","to","menuBar","Controls","mode","epsilon","epsilonMax","epsilonMin","maxSteps","updateTarget","episodes","batchSize","running","stepDelay","handleInputChange","bind","handleModeSelectChange","handlePlayButtonPress","handleResetButtonPress","value","type","checked","name","onModeSelect","onPlay","Object","freeze","currentStep","currentEpisode","onReset","controlsElements","ControlsModel","el","label","tooltip","push","createLabel","createInput","labelText","labelFor","className","htmlFor","onChange","key","elementProps","createElement","defaultValue","disabled","max","min","step","createControlsForMode","Counter","episode","style","clear","showCurrentStep","showCurrentEpisode","Transition","action","reward","done","nextState","allowedActions","Action","enumKey","DOWN","UP","RIGHT","LEFT","console","error","ordinal","Enumify","_","closeEnum","Dqn","bufferSize","gamma","layers","reset","mainModel","tf","layer","add","dense","compile","loss","optimizer","targetModel","updateTargetModel","replayBuffer","game","stateAsTensor","epsilonGreedy","transition","storeTransition","i","weights","getWeights","setWeights","unshift","length","pop","actionSpace","Math","random","randIndex","floor","qValues","predict","argMax","dataSync","fromOrdinal","miniBatch","targetQ","targetValue","expected","arraySync","enumOrdinal","fit","epochs","shuffle","clonedBuffer","Set","randomIndex","mainPred","targetPred","data","maxAction","sleep","ms","setTimeout","parseInt","Trainer","dqn","epsDecay","singleEpisode","exp","forceUpdate","trainModel","Game","controlMode","params","ref","current","trainer","controlState","singleStep","fullyTrain","WelcomePage","Cell","StylesModel","classes","join","titles","content","populated","Board","cells","boardData","index","location","rowSize","FrozenLake","board","prevAction","opposite","stateX","stateY","prevState","includes","cell","oneHot","Index","parentRoutes","frozenLakeRef","createRef","homePath","exact","path","element","ParamsModel","frozenLake","map","routingTree","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.9c4974cd.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class AsyncComponent extends React.Component {\n    setStateAsync(newState) {\n        return new Promise((resolve) => {\n            this.setState(newState, () => {\n                resolve();\n            });\n        });\n    }\n}","import React from 'react';\nimport AsyncComponent from '../util/AsyncComponent';\nimport { Outlet, Link } from \"react-router-dom\";\nimport { AppBar, Toolbar, Menu, MenuItem, IconButton, Typography } from '@mui/material';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport './App.css';\n\nconst appTitle = {\n    flexGrow: 1,\n    textAlign: 'center'\n};\n\nexport default class App extends AsyncComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mainMenu: null,\n            title: 'Welcome'\n        }\n    }\n\n    async setMainMenu(target) {\n        await this.setStateAsync({mainMenu: target})\n    }\n\n    async setTitle(title) {\n        await this.setStateAsync({title});\n    }\n\n    menuBar() {\n        return <AppBar position=\"static\">\n            <Toolbar>\n                <IconButton\n                    size=\"large\"\n                    edge=\"start\"\n                    color=\"inherit\"\n                    aria-haspopup=\"true\"\n                    aria-controls=\"main-menu\"\n                    sx={{ mr: 2 }}\n                    onClick={e => this.setMainMenu(e.currentTarget)}\n                >\n                    <MenuIcon />\n                </IconButton>\n                <Typography variant=\"h6\" component=\"div\" sx={appTitle}>\n                    {this.state.title}\n                </Typography>\n            </Toolbar>\n        </AppBar>\n    }\n\n    mainMenu() {\n        return <Menu\n            id=\"main-menu\"\n            open={Boolean(this.state.mainMenu)}\n            anchorEl={this.state.mainMenu}\n            onClose={async () => await this.setMainMenu(null)}\n            disableAutoFocusItem\n        >\n            <MenuItem\n                component={Link}\n                onClick={async () => {\n                    await this.setMainMenu(null);\n                    await this.setTitle('Welcome');\n                }}\n                to=\"/\"\n            > Home\n            </MenuItem>\n            <MenuItem\n                component={Link}\n                onClick={async () => {\n                    await this.setMainMenu(null);\n                    await this.setTitle('Frozen Lake');\n                }}\n                to=\"/frozen-lake\"\n            > Frozen Lake\n            </MenuItem>\n        </Menu>\n    }\n\n    render() {\n        return <div>\n            {this.menuBar()}\n            {this.mainMenu()}\n\n            <Outlet />\n        </div>\n    }\n}","import React from \"react\";\nimport AsyncComponent from \"../../util/AsyncComponent\";\nimport ControlsModel from './models/Controls.json';\nimport './Controls.css';\n\nexport default class Controls extends AsyncComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mode: 'step',\n            epsilon: 0.5,\n            epsilonMax: 1.0,\n            epsilonMin: 0.0,\n            maxSteps: 20,\n            updateTarget: false,\n            episodes: 1000,\n            batchSize: 32,\n            running: false,\n            stepDelay: 500\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleModeSelectChange = this.handleModeSelectChange.bind(this);\n        this.handlePlayButtonPress = this.handlePlayButtonPress.bind(this);\n        this.handleResetButtonPress = this.handleResetButtonPress.bind(this);\n    }\n\n    async handleInputChange(e) {\n        const target = e.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        await this.setStateAsync({ [name]: value });\n    }\n\n    async handleModeSelectChange(e) {\n        await this.handleInputChange(e);\n        await this.props.onModeSelect(this.state.mode);\n    }\n\n    async handlePlayButtonPress() {\n        await this.setStateAsync({ running: true });\n        await this.props.onPlay(Object.freeze({...this.state}));\n        await this.setStateAsync({ running: false });\n    }\n\n    async handleResetButtonPress() {\n        await this.setStateAsync({ \n            running: false, \n            currentStep: 0, \n            currentEpisode: 0 \n        });\n        await this.props.onReset();\n    }\n\n    createControlsForMode() {\n        let controlsElements = [];\n        for (const el of ControlsModel[this.state.mode]) {\n            const props = el.props;\n            const label = el.label;\n            const name = props.name;\n            const tooltip = props.title;\n\n            controlsElements.push(this.createLabel(label, name, tooltip));\n            controlsElements.push(this.createInput(props));\n        }\n\n        return <div id=\"mode-controls\">\n            {controlsElements}\n        </div>\n    }\n\n    createLabel(labelText, labelFor, tooltip) {\n        return <label \n                className=\"control\" \n                htmlFor={labelFor}\n                title={tooltip}\n                id={`${labelFor}-label`} \n                key={`${labelFor}-label`}>{`${labelText}:`}&nbsp;\n            </label>\n    }\n\n    createInput(props) {\n        const name = props.name;\n        const className = \"control labeled\";\n        const onChange = this.handleInputChange;\n        const value = this.state[name];\n        const key = name + '-input';\n\n        let elementProps = {\n            ...props, \n            className,\n            onChange,\n            value,\n            key\n        };\n        return React.createElement('input', elementProps);\n    }\n\n    render() {\n        return <div id=\"controls-box\">\n                <div id=\"static-controls\">\n                    <select className=\"control\" id=\"mode-select\" name=\"mode\" title=\"Mode select\" \n                        onChange={this.handleModeSelectChange} defaultValue=\"step\">\n                        <option value=\"step\">Single Step</option>\n                        <option value=\"episode\">Single Episode</option>\n                        <option value=\"train\">Multiple Episodes</option>\n                    </select>\n                    <button \n                        className=\"control\" \n                        id=\"play-button\" \n                        title=\"Run\"\n                        disabled={this.state.running}\n                        onClick={this.handlePlayButtonPress}>▶\n                    </button>\n                    <button \n                        className=\"control\" \n                        id=\"reset-button\" \n                        title=\"Reset\" \n                        disabled={this.state.running}\n                        onClick={this.handleResetButtonPress}>↺\n                    </button>\n                    <label\n                        className=\"control\"\n                        htmlFor=\"stepDelay\"\n                        id=\"step-delay-label\"\n                        title=\"Delay between steps (ms)\">Delay:&nbsp;\n                    </label>\n                    <input \n                        className=\"control labeled\"\n                        name=\"stepDelay\"\n                        id=\"stepDelay\"\n                        title=\"Delay between steps (ms)\"\n                        onChange={this.handleInputChange}\n                        value={this.state.stepDelay}\n                        type=\"number\"\n                        max=\"5000\"\n                        min=\"100\"\n                        step=\"100\">\n                    </input>\n                </div>\n                {this.createControlsForMode()}\n            </div>\n    }\n}","import React from 'react';\nimport './Counter.css';\n\nexport default class Counter extends React.Component {\n    showCurrentStep() {\n        const mode = this.props.mode;\n        if (mode === 'episode' || mode === 'train') {\n            return <h3 id=\"counter-step\">Step: {this.props.step}</h3>\n        }\n    }\n\n    showCurrentEpisode() {\n        if (this.props.mode === 'train') {\n            return <h3 id=\"counter-episode\">Episode: {this.props.episode}</h3>\n        }\n    }\n\n    render() {\n        return <div style={{clear: 'both'}} id=\"counter-counts\">\n            {this.showCurrentStep()}\n            {this.showCurrentEpisode()}\n        </div>\n    }\n}","import { Enumify } from \"enumify\";\n\nclass Transition {\n    constructor(action, state, reward, done, nextState, allowedActions) {\n        this.action = action;\n        this.state = state;\n        this.reward = reward;\n        this.done = done;\n        this.nextState = nextState;\n        this.allowedActions = allowedActions;\n    }\n}\n\nclass Action extends Enumify {\n    static UP = new Action();\n    static DOWN = new Action();\n    static LEFT = new Action();\n    static RIGHT = new Action();\n    static _ = this.closeEnum();\n\n    opposite() {\n        switch (this.enumKey) {\n            case 'UP': \n                return Action.DOWN;\n            case 'DOWN':\n                return Action.UP;\n            case 'LEFT':\n                return Action.RIGHT;\n            case 'RIGHT':\n                return Action.LEFT;\n            default:\n                console.error(`Action '${this.enumKey}' doesn't have an opposite`);\n                break;\n        }\n    }\n\n    static fromOrdinal(ordinal) {\n        switch (ordinal) {\n            case 0:\n                return Action.UP;\n            case 1:\n                return Action.DOWN;\n            case 2:\n                return Action.LEFT;\n            case 3:\n                return Action.RIGHT;\n            default:\n                console.error(`Not an Action: ${ordinal}`);\n                break;\n        }\n    }\n}\n\nexport {\n    Transition, Action\n}","/*eslint eqeqeq: \"off\"*/\n\nimport * as tf from '@tensorflow/tfjs';\nimport { Action } from '../Step';\n\nexport default class Dqn {\n    constructor(bufferSize, gamma, layers) {\n        this.bufferSize = bufferSize;\n        this.gamma = gamma;\n        this.layers = layers;\n        this.reset();\n    }\n\n    reset() {\n        this.mainModel = tf.sequential();\n        for (const layer of this.layers) {\n            this.mainModel.add(tf.layers.dense(layer));\n        }\n        this.mainModel.compile({loss: 'meanSquaredError', optimizer: 'adam'});\n\n        this.targetModel = tf.sequential();\n        for (const layer of this.layers) {\n            this.targetModel.add(tf.layers.dense(layer));\n        }\n        this.updateTargetModel();\n        this.replayBuffer = [];\n    }\n\n    async step(game, epsilon) {\n        const state = game.stateAsTensor();\n        const action = await this.epsilonGreedy(state, game.allowedActions(), epsilon);\n        const transition = await game.step(action);\n\n        this.storeTransition(transition);\n        return transition;\n    }\n\n    updateTargetModel() {\n        for (const i in this.mainModel.layers) {\n            const weights = this.mainModel.layers[i].getWeights();\n            this.targetModel.layers[i].setWeights(weights);\n        }\n    }\n\n    storeTransition(transition) {\n        this.replayBuffer.unshift(transition);\n\n        if (this.replayBuffer.length === this.bufferSize + 1) {\n            this.replayBuffer.pop();\n        }\n    }\n\n    async epsilonGreedy(state, actionSpace, epsilon) {\n        if (Math.random() < epsilon) {\n            const randIndex = Math.floor(Math.random() * actionSpace.length);\n            return actionSpace[randIndex];\n        }\n        const qValues = this.mainModel.predict(state);\n        const argMax = await qValues.argMax(-1).dataSync();\n\n        return Action.fromOrdinal(argMax[0]);\n    }\n\n    async trainModel(batchSize) {\n        if (this.replayBuffer.length < batchSize) {\n            return;\n        }\n\n        for (const transition of this.miniBatch(batchSize)) {\n            let targetQ = transition.reward;\n            if (!transition.done) {\n                targetQ += this.gamma * this.targetValue(transition.nextState);\n            }\n\n            let expected = this.mainModel.predict(transition.state).arraySync();\n            expected[0][transition.action.enumOrdinal] = targetQ;\n\n            await this.mainModel.fit(transition.state, tf.tensor2d(expected), { epochs: 1, batchSize: 1, shuffle: false });\n        }\n    }\n\n    miniBatch(batchSize) {\n        if (batchSize >= this.replayBuffer.length) {\n            let clonedBuffer = [...this.replayBuffer];\n            tf.util.shuffle(clonedBuffer);\n            return clonedBuffer;\n        }\n\n        const bufferSize = this.replayBuffer.length;\n        let miniBatch = new Set();\n\n        while (miniBatch.size != batchSize) {\n            const randomIndex = Math.floor(Math.random() * bufferSize);\n            miniBatch.add(this.replayBuffer[randomIndex]);\n        }\n        return miniBatch;\n    }\n\n    async targetValue(nextState) {\n        const mainPred = this.mainModel.predict(nextState);\n        const targetPred = this.targetModel.predict(nextState);\n        const maxAction = await mainPred.argMax(-1).data();\n\n        return targetPred.arraySync()[0][maxAction[0]];\n    }\n}","export default function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, parseInt(ms)));\n  }","import Dqn from './Dqn';\nimport sleep from '../Sleep'\n\nexport default class Trainer {\n    constructor(bufferSize, gamma, layers) {\n        this.dqn = new Dqn(bufferSize, gamma, layers);\n    }\n\n    async fullyTrain(component, episodes, maxSteps, batchSize, epsilonMax, epsilonMin, stepDelay) {\n        const epsDecay = (epsilonMax - epsilonMin) / episodes;\n        let epsilon = epsilonMax;\n\n        for (let episode = 0; episode < episodes; episode ++) {\n            await component.setStateAsync({ currentEpisode: episode + 1 });\n            await this.singleEpisode(component, maxSteps, epsilon, batchSize, stepDelay);\n\n            if (epsilon > epsilonMin) {\n                epsilon = (epsilonMax - epsilonMin) * Math.exp(-epsDecay * episode) + epsilonMin;\n            }\n        }\n        this.dqn.updateTargetModel();\n    }\n\n    async singleEpisode(component, maxSteps, epsilon, batchSize, stepDelay) {\n        for (let step = 0; step < maxSteps; step ++) {\n            const transition = await this.dqn.step(component.game, epsilon);\n\n            await component.setStateAsync({ currentStep: step + 1 });\n            await sleep(stepDelay);\n            component.forceUpdate();\n\n            if (transition.done) {\n                break;\n            }\n        }\n        await component.game.reset();\n        await this.dqn.trainModel(batchSize);\n        this.dqn.updateTargetModel();\n    }\n\n    async singleStep(component, epsilon, updateTarget, batchSize) {\n        const step = await this.dqn.step(component.game, epsilon);\n\n        if (step.done) {\n            await component.game.reset();\n            await this.dqn.trainModel(batchSize);\n        }\n        if (updateTarget) {\n            this.dqn.updateTargetModel();\n        }\n    }\n\n    reset() {\n        this.dqn.reset();\n    }\n}","import AsyncComponent from '../../util/AsyncComponent';\nimport Controls from '../controls/Controls';\nimport Counter from '../counter/Counter';\nimport Trainer from '../../util/rl/Trainer';\nimport './Game.css';\n\nexport default class Game extends AsyncComponent {\n    constructor(props) {\n        super(props);\n\n        this.state = { \n            currentStep: 0, \n            currentEpisode: 0, \n            controlMode: 'step' \n        };\n        this.onPlay = this.onPlay.bind(this);\n        this.onReset = this.onReset.bind(this);\n        this.onModeSelect = this.onModeSelect.bind(this);\n    }\n\n    componentDidMount() {\n        const params = this.props.params;\n        this.game = this.props.component.ref.current;\n        this.trainer = new Trainer(params.bufferSize, params.gamma, params.layers);\n    }\n\n    async onPlay(controlState) {\n        switch (controlState.mode) {\n            case 'step':\n                await this.trainer.singleStep(this,\n                    controlState.epsilon, \n                    controlState.updateTarget, \n                    controlState.batchSize\n                );\n                break;\n\n            case 'episode':\n                await this.trainer.singleEpisode(this,\n                    controlState.maxSteps, \n                    controlState.epsilon, \n                    controlState.batchSize,\n                    controlState.stepDelay\n                );\n                break;\n\n            case 'train':\n                await this.trainer.fullyTrain(this,\n                    controlState.episodes, \n                    controlState.maxSteps, \n                    controlState.batchSize, \n                    controlState.epsilonMax, \n                    controlState.epsilonMin,\n                    controlState.stepDelay\n                );\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    async onReset() {\n        await this.setStateAsync({ \n            currentStep: 0, \n            currentEpisode: 0 \n        });\n        await this.game.reset();\n        this.trainer.reset();\n    }\n\n    async onModeSelect(mode) {\n        await this.setStateAsync({ \n            currentStep: 0, \n            currentEpisode: 0,\n            controlMode: mode\n        });\n        await this.game.reset();\n    }\n\n    render() {\n        return <div>\n            <div id=\"game-controls-container\">\n                <Controls \n                    onPlay={this.onPlay} \n                    onReset={this.onReset} \n                    onModeSelect={this.onModeSelect}\n                />\n            </div>\n            <div id=\"game-container\">\n                {this.props.component}\n            </div>\n            <div id=\"game-counter-container\">\n                <Counter \n                    mode={this.state.controlMode} \n                    step={this.state.currentStep} \n                    episode={this.state.currentEpisode} \n                />\n            </div>\n        </div>\n    }\n}","import React from \"react\";\nimport './WelcomePage.css';\n\nexport default class WelcomePage extends React.Component {\n    render() {\n        return <div id=\"welcome\">\n            <h1>Welcome!</h1>\n        </div>\n    }\n}","import React from 'react';\nimport StylesModel from './models/Styles.json';\nimport './Cell.css';\n\nexport default class Cell extends React.Component {\n    render() {\n        const type = this.props.type;\n        const className = [StylesModel.classes[type] || '', 'cell-grid-item'].join(' ');\n        const tooltip = StylesModel.titles[type];\n        const content = (this.props.populated && '웃') || type;\n\n        return <div className={className} title={tooltip}>{content}</div>\n    }\n}","import React from 'react';\nimport Cell from './cell/Cell';\nimport './Board.css';\n\nexport default class Board extends React.Component {\n    render() {\n        let cells = [];\n        for (const i in this.props.boardData) {\n            const type = this.props.boardData[i];\n            const index = parseInt(i);\n            const populated = index  === this.props.location;\n            \n            cells.push(<Cell type={type} populated={populated} key={i} />);\n            if ((index + 1) % this.props.rowSize === 0) {\n                cells.push(<br key={`${i}-br`} />)\n            }\n        }\n        return <div id=\"board-grid\">\n            {cells}\n        </div>\n    }\n}","import * as tf from '@tensorflow/tfjs';\nimport React from 'react';\nimport { Action, Transition } from '../../../util/Step';\nimport AsyncComponent from '../../../util/AsyncComponent';\nimport Board from './board/Board';\nimport './FrozenLake.css';\n\nexport default class FrozenLake extends AsyncComponent {\n    board = Object.freeze([\n        'S', 'F', 'F', 'F',\n        'F', 'H', 'F', 'H',\n        'F', 'F', 'F', 'H',\n        'H', 'F', 'F', 'G'\n    ]);\n\n    constructor(props) {\n        super(props);\n\n        this.state = { location: 0 };\n        this.prevAction = Action.RIGHT; \n    }\n\n    componentDidMount() {}\n    componentWillUnmount() {}\n\n    async reset() {\n        await this.setStateAsync({ location: 0 });\n        this.prevAction = Action.RIGHT\n    }\n\n    allowedActions() {\n        let opposite = this.prevAction.opposite();\n        let location = this.state.location;\n        \n        let stateX = location % 4;\n        let stateY = Math.floor(location / 4);\n\n        let allowedActions = [];\n\n        if (stateX > 0 && opposite !== Action.LEFT) {\n            allowedActions.push(Action.LEFT);\n        }\n        if (stateX < 3 && opposite !== Action.RIGHT) {\n            allowedActions.push(Action.RIGHT);\n        }\n        if (stateY > 0 && opposite !== Action.UP) {\n            allowedActions.push(Action.UP);\n        }\n        if (stateY < 3 && opposite !== Action.DOWN) {\n            allowedActions.push(Action.DOWN);\n        }\n        return allowedActions;\n    }\n\n    async step(action) {\n        let prevState = this.stateAsTensor();\n        let allowedActions = this.allowedActions();\n\n        if (!allowedActions.includes(action)) {\n            return new Transition(action, prevState, -1, true, prevState, allowedActions);\n        }\n        let location = this.state.location;\n        let stateX = location % 4;\n        let stateY = Math.floor(location / 4);\n\n        switch (action) {\n            case Action.UP:\n                stateY --;\n                break;\n\n            case Action.DOWN:\n                stateY ++;\n                break;\n\n            case Action.LEFT:\n                stateX --;\n                break;\n\n            case Action.RIGHT:\n                stateX ++;\n                break;\n            \n            default:\n                break;\n        }\n        await this.setStateAsync({ location: stateY * 4 + stateX });\n        this.prevAction = action;\n\n        return new Transition(action, prevState, this.reward(), this.done(), this.stateAsTensor(), allowedActions);\n    }\n\n    reward() {\n        let location = this.state.location;\n        switch (this.board[location]) {\n            case 'G':\n                return 1;\n            case 'H':\n                return -1;\n            case 'F':\n            case 'S':\n            default:\n                return 0;\n        }\n    }\n\n    done() {\n        let location = this.state.location;\n        let cell = this.board[location];\n        return cell === 'G' || cell === 'H';\n    }\n\n    stateAsTensor() {\n        let oneHot = [\n            0, 0, 0, 0,\n            0, 0, 0, 0,\n            0, 0, 0, 0,\n            0, 0, 0, 0\n        ];\n        let location = this.state.location;\n        oneHot[location] = 1;\n        \n        return tf.tensor2d([oneHot]);\n    }\n\n    render() {\n        return <Board boardData={this.board} location={this.state.location} rowSize={4} />\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport App from './app/App';\nimport Game from './app/game/Game';\nimport WelcomePage from './app/welcome-page/WelcomePage';\nimport FrozenLake from './app/game/frozen-lake/FrozenLake';\nimport ParamsModel from './models/Params.json';\nimport './index.css';\n\nclass Index extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.parentRoutes = [\"/\", \"/app/\", \"/interactive-dqn/\"];\n        this.frozenLakeRef = React.createRef();\n    }\n\n    routingTree(homePath, index) {\n        return <Route exact path={homePath} element={<App />} key={index}>\n            <Route path={homePath} element={<WelcomePage />} />\n            <Route path={homePath + '/frozen-lake'} element={\n                <Game\n                    params={ParamsModel.frozenLake}\n                    component={<FrozenLake ref={this.frozenLakeRef}/>}\n                />}\n            />\n        </Route>\n    }\n\n    render() {\n        return <BrowserRouter>\n            <Routes>\n                {this.parentRoutes.map((path, index) => \n                    this.routingTree(path, index)\n                )}\n            </Routes>\n        </BrowserRouter>\n    }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Index />, rootElement);\n"],"sourceRoot":""}